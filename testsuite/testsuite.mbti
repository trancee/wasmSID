package "trancee/wasmSID/testsuite"

// Values
let _start : FixedArray[Byte]

let adca : FixedArray[Byte]

let adcax : FixedArray[Byte]

let adcay : FixedArray[Byte]

let adcb : FixedArray[Byte]

let adcix : FixedArray[Byte]

let adciy : FixedArray[Byte]

let adcz : FixedArray[Byte]

let adczx : FixedArray[Byte]

let alrb : FixedArray[Byte]

let ancb : FixedArray[Byte]

let anda : FixedArray[Byte]

let andax : FixedArray[Byte]

let anday : FixedArray[Byte]

let andb : FixedArray[Byte]

let andix : FixedArray[Byte]

let andiy : FixedArray[Byte]

let andz : FixedArray[Byte]

let andzx : FixedArray[Byte]

let aneb : FixedArray[Byte]

let arrb : FixedArray[Byte]

let asla : FixedArray[Byte]

let aslax : FixedArray[Byte]

let asln : FixedArray[Byte]

let aslz : FixedArray[Byte]

let aslzx : FixedArray[Byte]

let asoa : FixedArray[Byte]

let asoax : FixedArray[Byte]

let asoay : FixedArray[Byte]

let asoix : FixedArray[Byte]

let asoiy : FixedArray[Byte]

let asoz : FixedArray[Byte]

let asozx : FixedArray[Byte]

let axsa : FixedArray[Byte]

let axsix : FixedArray[Byte]

let axsz : FixedArray[Byte]

let axszy : FixedArray[Byte]

let bccr : FixedArray[Byte]

let bcsr : FixedArray[Byte]

let beqr : FixedArray[Byte]

let bita : FixedArray[Byte]

let bitz : FixedArray[Byte]

let bmir : FixedArray[Byte]

let bner : FixedArray[Byte]

let bplr : FixedArray[Byte]

let branchwrap : FixedArray[Byte]

let brkn : FixedArray[Byte]

let bvcr : FixedArray[Byte]

let bvsr : FixedArray[Byte]

let cia1pb6 : FixedArray[Byte]

let cia1pb7 : FixedArray[Byte]

let cia1ta : FixedArray[Byte]

let cia1tab : FixedArray[Byte]

let cia1tb : FixedArray[Byte]

let cia1tb123 : FixedArray[Byte]

let cia2pb6 : FixedArray[Byte]

let cia2pb7 : FixedArray[Byte]

let cia2ta : FixedArray[Byte]

let cia2tb : FixedArray[Byte]

let cia2tb123 : FixedArray[Byte]

let clcn : FixedArray[Byte]

let cldn : FixedArray[Byte]

let clin : FixedArray[Byte]

let clvn : FixedArray[Byte]

let cmpa : FixedArray[Byte]

let cmpax : FixedArray[Byte]

let cmpay : FixedArray[Byte]

let cmpb : FixedArray[Byte]

let cmpix : FixedArray[Byte]

let cmpiy : FixedArray[Byte]

let cmpz : FixedArray[Byte]

let cmpzx : FixedArray[Byte]

let cntdef : FixedArray[Byte]

let cnto2 : FixedArray[Byte]

let cpuport : FixedArray[Byte]

let cputiming : FixedArray[Byte]

let cpxa : FixedArray[Byte]

let cpxb : FixedArray[Byte]

let cpxz : FixedArray[Byte]

let cpya : FixedArray[Byte]

let cpyb : FixedArray[Byte]

let cpyz : FixedArray[Byte]

let dcma : FixedArray[Byte]

let dcmax : FixedArray[Byte]

let dcmay : FixedArray[Byte]

let dcmix : FixedArray[Byte]

let dcmiy : FixedArray[Byte]

let dcmz : FixedArray[Byte]

let dcmzx : FixedArray[Byte]

let deca : FixedArray[Byte]

let decax : FixedArray[Byte]

let decz : FixedArray[Byte]

let deczx : FixedArray[Byte]

let dexn : FixedArray[Byte]

let deyn : FixedArray[Byte]

let eora : FixedArray[Byte]

let eorax : FixedArray[Byte]

let eoray : FixedArray[Byte]

let eorb : FixedArray[Byte]

let eorix : FixedArray[Byte]

let eoriy : FixedArray[Byte]

let eorz : FixedArray[Byte]

let eorzx : FixedArray[Byte]

let finish : FixedArray[Byte]

let flipos : FixedArray[Byte]

let icr01 : FixedArray[Byte]

let imr : FixedArray[Byte]

let inca : FixedArray[Byte]

let incax : FixedArray[Byte]

let incz : FixedArray[Byte]

let inczx : FixedArray[Byte]

let insa : FixedArray[Byte]

let insax : FixedArray[Byte]

let insay : FixedArray[Byte]

let insix : FixedArray[Byte]

let insiy : FixedArray[Byte]

let insz : FixedArray[Byte]

let inszx : FixedArray[Byte]

let inxn : FixedArray[Byte]

let inyn : FixedArray[Byte]

let irq : FixedArray[Byte]

let jmpi : FixedArray[Byte]

let jmpw : FixedArray[Byte]

let jsrw : FixedArray[Byte]

let lasay : FixedArray[Byte]

let laxa : FixedArray[Byte]

let laxay : FixedArray[Byte]

let laxix : FixedArray[Byte]

let laxiy : FixedArray[Byte]

let laxz : FixedArray[Byte]

let laxzy : FixedArray[Byte]

let ldaa : FixedArray[Byte]

let ldaax : FixedArray[Byte]

let ldaay : FixedArray[Byte]

let ldab : FixedArray[Byte]

let ldaix : FixedArray[Byte]

let ldaiy : FixedArray[Byte]

let ldaz : FixedArray[Byte]

let ldazx : FixedArray[Byte]

let ldxa : FixedArray[Byte]

let ldxay : FixedArray[Byte]

let ldxb : FixedArray[Byte]

let ldxz : FixedArray[Byte]

let ldxzy : FixedArray[Byte]

let ldya : FixedArray[Byte]

let ldyax : FixedArray[Byte]

let ldyb : FixedArray[Byte]

let ldyz : FixedArray[Byte]

let ldyzx : FixedArray[Byte]

let loadth : FixedArray[Byte]

let lsea : FixedArray[Byte]

let lseax : FixedArray[Byte]

let lseay : FixedArray[Byte]

let lseix : FixedArray[Byte]

let lseiy : FixedArray[Byte]

let lsez : FixedArray[Byte]

let lsezx : FixedArray[Byte]

let lsra : FixedArray[Byte]

let lsrax : FixedArray[Byte]

let lsrn : FixedArray[Byte]

let lsrz : FixedArray[Byte]

let lsrzx : FixedArray[Byte]

let lxab : FixedArray[Byte]

let mmu : FixedArray[Byte]

let mmufetch : FixedArray[Byte]

let nmi : FixedArray[Byte]

let nopa : FixedArray[Byte]

let nopax : FixedArray[Byte]

let nopb : FixedArray[Byte]

let nopn : FixedArray[Byte]

let nopz : FixedArray[Byte]

let nopzx : FixedArray[Byte]

let oneshot : FixedArray[Byte]

let oraa : FixedArray[Byte]

let oraax : FixedArray[Byte]

let oraay : FixedArray[Byte]

let orab : FixedArray[Byte]

let oraix : FixedArray[Byte]

let oraiy : FixedArray[Byte]

let oraz : FixedArray[Byte]

let orazx : FixedArray[Byte]

let phan : FixedArray[Byte]

let phpn : FixedArray[Byte]

let plan : FixedArray[Byte]

let plpn : FixedArray[Byte]

let rlaa : FixedArray[Byte]

let rlaax : FixedArray[Byte]

let rlaay : FixedArray[Byte]

let rlaix : FixedArray[Byte]

let rlaiy : FixedArray[Byte]

let rlaz : FixedArray[Byte]

let rlazx : FixedArray[Byte]

let rola : FixedArray[Byte]

let rolax : FixedArray[Byte]

let roln : FixedArray[Byte]

let rolz : FixedArray[Byte]

let rolzx : FixedArray[Byte]

let rora : FixedArray[Byte]

let rorax : FixedArray[Byte]

let rorn : FixedArray[Byte]

let rorz : FixedArray[Byte]

let rorzx : FixedArray[Byte]

let rraa : FixedArray[Byte]

let rraax : FixedArray[Byte]

let rraay : FixedArray[Byte]

let rraix : FixedArray[Byte]

let rraiy : FixedArray[Byte]

let rraz : FixedArray[Byte]

let rrazx : FixedArray[Byte]

let rtin : FixedArray[Byte]

let rtsn : FixedArray[Byte]

let sbca : FixedArray[Byte]

let sbcax : FixedArray[Byte]

let sbcay : FixedArray[Byte]

let sbcb : FixedArray[Byte]

let sbcbeb : FixedArray[Byte]

let sbcix : FixedArray[Byte]

let sbciy : FixedArray[Byte]

let sbcz : FixedArray[Byte]

let sbczx : FixedArray[Byte]

let sbxb : FixedArray[Byte]

let secn : FixedArray[Byte]

let sedn : FixedArray[Byte]

let sein : FixedArray[Byte]

let shaay : FixedArray[Byte]

let shaiy : FixedArray[Byte]

let shsay : FixedArray[Byte]

let shxay : FixedArray[Byte]

let shyax : FixedArray[Byte]

let staa : FixedArray[Byte]

let staax : FixedArray[Byte]

let staay : FixedArray[Byte]

let staix : FixedArray[Byte]

let staiy : FixedArray[Byte]

let staz : FixedArray[Byte]

let stazx : FixedArray[Byte]

let stxa : FixedArray[Byte]

let stxz : FixedArray[Byte]

let stxzy : FixedArray[Byte]

let stya : FixedArray[Byte]

let styz : FixedArray[Byte]

let styzx : FixedArray[Byte]

let taxn : FixedArray[Byte]

let tayn : FixedArray[Byte]

let trap1 : FixedArray[Byte]

let trap10 : FixedArray[Byte]

let trap11 : FixedArray[Byte]

let trap12 : FixedArray[Byte]

let trap13 : FixedArray[Byte]

let trap14 : FixedArray[Byte]

let trap15 : FixedArray[Byte]

let trap16 : FixedArray[Byte]

let trap17 : FixedArray[Byte]

let trap2 : FixedArray[Byte]

let trap3 : FixedArray[Byte]

let trap4 : FixedArray[Byte]

let trap5 : FixedArray[Byte]

let trap6 : FixedArray[Byte]

let trap7 : FixedArray[Byte]

let trap8 : FixedArray[Byte]

let trap9 : FixedArray[Byte]

let tsxn : FixedArray[Byte]

let txan : FixedArray[Byte]

let txsn : FixedArray[Byte]

let tyan : FixedArray[Byte]

// Types and methods

// Type aliases

// Traits

